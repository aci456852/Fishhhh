<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 映射文件，映射到对应的SQL接口 -->
<mapper namespace="com.example.demo0812.DataMapper">

    <!--返回的结果集，用于关联实体类属性和数据库字段 -->
    <!--如果实体类属性和数据库属性名保持一致，就不需要javaType和jdbcType（必须大写）属性 -->
    <resultMap id="Rule_resultMap" type="com.example.demo0812.bean.Rule">
        <result column="pid" property="pid" javaType="java.lang.Integer" jdbcType="INTEGER" />
        <result column="pname" property="pname" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="pcode" property="pcode" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="ppos" property="ppos" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="ptype" property="ptype" javaType="java.lang.String" jdbcType="VARCHAR" />
    </resultMap>

    <!-- 显示数据 -->
    <select id="listALL" resultMap="Rule_resultMap">
        select * from Rule order by pid
    </select>

    <!-- 查询数据 -->
    <!-- 入参定义：在接口定义中使用@Param注解(单参/多参都可使用) -->
    <!-- 语句末尾不能有分号：ORA-00911: invalid character -->
    <select id="ruleQuery" resultMap="Rule_resultMap">
        select * from Rule where ppos like '%'||#{ppos}||'%'
    </select>

    <!-- 插入数据 -->
    <!-- 入参定义：实体类，会自动解析属性到对应的值-->
    <insert id="ruleInsert" parameterType="com.example.demo0812.bean.Rule">
		insert into Rule (pname,pcode,ppos,ptype)
		values (#{pname}, #{pcode}, #{ppos}, #{ptype})
	</insert>

    <!-- 更新数据 -->
    <!-- 入参定义：在接口定义中使用@Param注解(多参情况，只能使用这种形式) -->
    <update id="ruleUpdate">
		UPDATE Rule SET ppos = #{ppos}
		WHERE pid = #{pid}
	</update>

    <!-- 删除数据 -->
    <!-- 入参定义：parameterType指定输入参数(单参情况，亦可@Param注解) -->
    <delete id="ruleDelete" parameterType="java.lang.Integer">
		DELETE FROM Rule WHERE pid =#{pid}
	</delete>

</mapper>